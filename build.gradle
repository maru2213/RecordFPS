buildscript {
    repositories {
		mavenLocal()
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        //maven {
        //    name = "sonatype"
        //    url = "https://oss.sonatype.org/content/repositories/snapshots/"
        //}
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2_0.0.1'
    }
}

apply plugin: 'forge'

sourceCompatibility = targetCompatibility = "1.8"
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

version = "1.0.3"
group= "maru.recordfps" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "RecordFPS"

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"

    srgExtra "PK: org/jfree org/jfree"
    srgExtra "PK: org/jfree/chart org/jfree/chart"
    srgExtra "PK: org/jfree/data org/jfree/data"
}

configurations{
    shade
    compile.extendsFrom shade
}

dependencies {
    shade 'org.jfree:jfreechart:1.0.19'
}

jar {
    configurations.shade.each {dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
        }
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
sourceSets {
    main {
	    output.resourcesDir = output.classesDir
	}
}